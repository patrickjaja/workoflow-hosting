volumes:
  n8n-data:
  n8n-backup:
  qdrant-data:
  postgres-data:
  minio-data:
  redis-data:
  searxng-data:

x-n8n-shared: &n8n-shared
  image: n8nio/n8n:latest
  env_file:
    - .env
  restart: 'unless-stopped'
  volumes:
    - n8n-data:/home/node/.n8n
    - n8n-backup:/home/backups
  extra_hosts:
    - "host.docker.internal:host-gateway"
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy
    minio:
      condition: service_healthy

services:
  n8n:
    <<: *n8n-shared
    ports:
      - "5678:5678"

  n8n-worker:
    <<: *n8n-shared
    command: worker
    depends_on:
      - n8n

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant-data:/qdrant/storage

  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    entrypoint: sh
    command: -c 'mkdir -p /data/workoflow-rag && minio server --address ":9000" --console-address ":9001" /data'
    env_file:
      - .env
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 1s
      timeout: 5s
      retries: 5
      start_period: 1s

  postgres:
    image: postgres:17.5-alpine
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 3s
      timeout: 3s
      retries: 10

  redis:
    image: redis:8.0.1
    ports:
      - "6380:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  mcp-atlassian:
    image: ghcr.io/sooperset/mcp-atlassian:latest
    ports:
      - "9005:9000" # Host port 9005 maps to container port 9000
    env_file:
      - ./atlassian-mcp/.env
    command: ["--transport", "streamable-http", "--port", "9000", "-vv"]

  workoflow-teams-bot:
    image: patricks1987/workoflow-teams-bot:main
    ports:
      - "3978:3978"
    env_file:
      - ./.env

  searxng:
    image: searxng/searxng:latest
    container_name: searxng
    ports:
      - "8090:8080"
    volumes:
      - ./searxng-settings.yml:/etc/searxng/settings.yml:ro
      - searxng-data:/etc/searxng
    environment:
      - SEARXNG_BASE_URL=http://searxng:8080/
      - SEARXNG_SECRET_KEY=${SEARXNG_SECRET_KEY:-ultrasecretkey}
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  tika:
    image: apache/tika:latest
    container_name: tika
    ports:
      - "9998:9998"
    restart: unless-stopped

  gotenberg:
    image: gotenberg/gotenberg:8
    container_name: gotenberg
    ports:
      - "3002:80"
    command: gotenberg --api-port=80 --api-body-limit=50MB
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
